{"version":3,"sources":["components/Header.js","components/Nav.js","components/Footer.js","pages/Post.js","pages/Feed.js","pages/Home.js","pages/NewPost.js","pages/EditPost.js","pages/PostPage.js","pages/About.js","pages/Missing.js","hooks/useAxiosFetch.js","App.js","api/posts.js","store.js","index.js"],"names":["Header","title","className","Nav","posts","useStoreState","state","search","setSearch","useStoreActions","actions","setSearchResults","useEffect","filteredResults","filter","post","body","toLowerCase","includes","reverse","onSubmit","e","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","to","Footer","postCount","today","Date","style","marginLeft","getFullYear","Post","datetime","length","slice","Feed","map","Home","fetchError","isLoading","searchResults","color","NewPost","history","useHistory","postTitle","postBody","savePost","setPostTitle","setPostBody","format","push","required","EditPost","useParams","editTitle","editBody","editPost","setEditTitle","setEditBody","getPostById","onClick","handleEdit","PostPage","deletePost","handleDelete","About","marginTop","Missing","useAxiosFetch","dataUrl","useState","data","setData","setFetchError","setIsLoading","isMounted","source","axios","CancelToken","url","a","get","cancelToken","token","response","message","fetchData","cancel","App","setPosts","exact","path","component","create","baseURL","createStore","action","payload","computed","find","toString","thunk","newPost","helpers","getState","api","console","log","delete","updatedPost","put","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.c1719504.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = ({ title }) => {\r\n  return (\r\n    <header className=\"Header\">\r\n      <h1>{title}</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nconst Nav = () => {\r\n  const posts = useStoreState((state) => state.posts);\r\n  const search = useStoreState((state) => state.search);\r\n  const setSearch = useStoreActions((actions) => actions.setSearch);\r\n  const setSearchResults = useStoreActions(\r\n    (actions) => actions.setSearchResults\r\n  );\r\n\r\n  useEffect(() => {\r\n    const filteredResults = posts.filter(\r\n      (post) =>\r\n        post.body.toLowerCase().includes(search.toLowerCase()) ||\r\n        post.title.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n    setSearchResults(filteredResults.reverse());\r\n  }, [posts, search, setSearchResults]);\r\n\r\n  return (\r\n    <nav className=\"Nav\">\r\n      <form className=\"searchForm\" onSubmit={(e) => e.preventDefault()}>\r\n        <label htmlFor=\"search\">Search Post</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"search\"\r\n          placeholder=\"Search Posts\"\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n      </form>\r\n\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/post\">Post</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/about\">About</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport { useStoreState } from \"easy-peasy\";\r\n\r\nconst Footer = () => {\r\n  const postCount = useStoreState((state) => state.postCount);\r\n  const today = new Date();\r\n  return (\r\n    <footer className=\"Footer\">\r\n      <p>{postCount} Blog Posts</p>\r\n      <p className=\"postDate\" style={{ marginLeft: \"2rem\" }}>\r\n        &copy; {today.getFullYear()}\r\n      </p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Post = ({ post }) => {\r\n  return (\r\n    <article className=\"post\">\r\n      <Link to={`/post/${post.id}`}>\r\n        <h2>{post.title}</h2>\r\n        <p className=\"postDate\">{post.datetime}</p>\r\n      </Link>\r\n      <p className=\"postBody\">\r\n        {post.body.length >= 25 ? `${post.body.slice(0, 25)}...` : post.body}\r\n      </p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Post from \"./Post\";\r\n\r\nconst Feed = ({ posts }) => {\r\n  return (\r\n    <>\r\n      {posts.map((post) => (\r\n        <Post key={post.id} post={post} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","import React from \"react\";\r\nimport Feed from \"./Feed\";\r\nimport { useStoreState } from \"easy-peasy\";\r\n\r\nconst Home = ({ fetchError, isLoading }) => {\r\n  const searchResults = useStoreState((state) => state.searchResults);\r\n\r\n  return (\r\n    <main className=\"Home\">\r\n      {isLoading && <p className=\"statusMsg\">Loading posts...</p>}\r\n      {!isLoading && fetchError && (\r\n        <p className=\"statusMsg\" style={{ color: \"red\" }}>\r\n          {fetchError}\r\n        </p>\r\n      )}\r\n      {!isLoading &&\r\n        !fetchError &&\r\n        (searchResults.length ? (\r\n          <Feed posts={searchResults} />\r\n        ) : (\r\n          <p className=\"statusMsg\">No posts to display</p>\r\n        ))}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nconst NewPost = () => {\r\n  const history = useHistory();\r\n\r\n  const posts = useStoreState((state) => state.posts);\r\n  const postTitle = useStoreState((state) => state.postTitle);\r\n  const postBody = useStoreState((state) => state.postBody);\r\n\r\n  const savePost = useStoreActions((actions) => actions.savePost);\r\n  const setPostTitle = useStoreActions((actions) => actions.setPostTitle);\r\n  const setPostBody = useStoreActions((actions) => actions.setPostBody);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const id = posts.length ? posts.length + 1 : 1;\r\n    const datetime = format(new Date(), \"MMM dd, yyyy pp\");\r\n    const newPost = {\r\n      id,\r\n      datetime,\r\n      title: postTitle,\r\n      body: postBody,\r\n    };\r\n    savePost(newPost);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <main className=\"NewPost\">\r\n      <h2>New Post</h2>\r\n      <form onSubmit={handleSubmit} className=\"newPostForm\">\r\n        <div className=\"post-group\">\r\n          <label htmlFor=\"postTitle\">Title:</label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            value={postTitle}\r\n            onChange={(e) => setPostTitle(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"post-group\">\r\n          <label htmlFor=\"postBody\">Post:</label>\r\n          <textarea\r\n            id=\"postBody\"\r\n            required\r\n            value={postBody}\r\n            onChange={(e) => setPostBody(e.target.value)}\r\n          ></textarea>\r\n        </div>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nconst EditPost = () => {\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const editTitle = useStoreState((state) => state.editTitle);\r\n  const editBody = useStoreState((state) => state.editBody);\r\n\r\n  const editPost = useStoreActions((actions) => actions.editPost);\r\n  const setEditTitle = useStoreActions((actions) => actions.setEditTitle);\r\n  const setEditBody = useStoreActions((actions) => actions.setEditBody);\r\n\r\n  const getPostById = useStoreState((state) => state.getPostById);\r\n  const post = getPostById(id);\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      setEditTitle(post.title);\r\n      setEditBody(post.body);\r\n    }\r\n  }, [post, setEditTitle, setEditBody]);\r\n\r\n  const handleEdit = (id) => {\r\n    const datetime = format(new Date(), \"MMM dd, yyyy pp\");\r\n    const updatedPost = {\r\n      id,\r\n      datetime,\r\n      title: editTitle,\r\n      body: editBody,\r\n    };\r\n    editPost(updatedPost);\r\n    history.push(`/post/${id}`);\r\n  };\r\n\r\n  return (\r\n    <main className=\"NewPost\">\r\n      {editTitle && (\r\n        <>\r\n          <h2>Edit Post</h2>\r\n          <form onSubmit={(e) => e.preventDefault()} className=\"newPostForm\">\r\n            <label htmlFor=\"postTitle\">Title:</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              id=\"postTitle\"\r\n              value={editTitle}\r\n              onChange={(e) => setEditTitle(e.target.value)}\r\n            />\r\n            <label htmlFor=\"postBody\">Body:</label>\r\n            <textarea\r\n              required\r\n              id=\"postBody\"\r\n              value={editBody}\r\n              onChange={(e) => setEditBody(e.target.value)}\r\n            />\r\n            <button type=\"button\" onClick={() => handleEdit(post.id)}>\r\n              Edit post\r\n            </button>\r\n          </form>\r\n        </>\r\n      )}\r\n      {!editTitle && (\r\n        <>\r\n          <h2>Post Not Found!</h2>\r\n          <p>Well, that's disappointing</p>\r\n          <p>\r\n            <Link to=\"/\">Visit our Homepage</Link>\r\n          </p>\r\n        </>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n","import React from \"react\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nconst PostPage = () => {\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const deletePost = useStoreActions((actions) => actions.deletePost);\r\n  const getPostById = useStoreState((state) => state.getPostById);\r\n  const post = getPostById(id);\r\n\r\n  const handleDelete = (id) => {\r\n    deletePost(id);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <main className=\"PostPage\">\r\n      <article>\r\n        {post && (\r\n          <>\r\n            <h2>{post.title}</h2>\r\n            <p>{post.datetime}</p>\r\n            <p>{post.body}</p>\r\n            <Link to={`/edit/${post.id}`}>\r\n              <button className=\"editButton\">Edit Post</button>\r\n            </Link>\r\n            <button\r\n              className=\"deleteButton\"\r\n              onClick={() => handleDelete(post.id)}\r\n            >\r\n              Delete Post\r\n            </button>\r\n          </>\r\n        )}\r\n        {!post && (\r\n          <>\r\n            <h2>Post not Found</h2>\r\n            <p>Well it's disappointing</p>\r\n            <p>\r\n              <Link to=\"/\">Visit our Home page</Link>\r\n            </p>\r\n          </>\r\n        )}\r\n      </article>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <main className=\"About\">\r\n      <h2>About</h2>\r\n      <p style={{ marginTop: \"1rem\" }}>\r\n        This blog app is a project in the Learn React tutorial series.\r\n      </p>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst Missing = () => {\r\n  return <main className=\"Missing\">Page not Found</main>;\r\n};\r\n\r\nexport default Missing;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useAxiosFetch = (dataUrl) => {\r\n  const [data, setData] = useState([]);\r\n  const [fetchError, setFetchError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    const source = axios.CancelToken.source();\r\n\r\n    const fetchData = async (url) => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await axios.get(url, {\r\n          cancelToken: source.token,\r\n        });\r\n        if (isMounted) {\r\n          setData(response.data);\r\n          setFetchError(null);\r\n        }\r\n      } catch (err) {\r\n        if (isMounted) {\r\n          setFetchError(err.message);\r\n          setData([]);\r\n        }\r\n      } finally {\r\n        isMounted && setIsLoading(false);\r\n      }\r\n    };\r\n    fetchData(dataUrl);\r\n\r\n    const cleanUp = () => {\r\n      isMounted = false;\r\n      source.cancel();\r\n    };\r\n\r\n    return cleanUp;\r\n  }, [dataUrl]);\r\n\r\n  return { data, fetchError, isLoading };\r\n};\r\n\r\nexport default useAxiosFetch;\r\n","import React, { useEffect } from \"react\";\n//Components:\nimport Header from \"./components/Header\";\nimport Nav from \"./components/Nav\";\nimport Footer from \"./components/Footer\";\nimport Home from \"./pages/Home\";\nimport NewPost from \"./pages/NewPost\";\nimport EditPost from \"./pages/EditPost\";\nimport PostPage from \"./pages/PostPage\";\nimport About from \"./pages/About\";\nimport Missing from \"./pages/Missing\";\n\nimport { Switch, Route } from \"react-router-dom\";\nimport useAxiosFetch from \"./hooks/useAxiosFetch\";\nimport { useStoreActions } from \"easy-peasy\";\n\nfunction App() {\n  const setPosts = useStoreActions((actions) => actions.setPosts);\n  const { data, fetchError, isLoading } = useAxiosFetch(\n    \"http://localhost:3500/posts\"\n  );\n\n  useEffect(() => {\n    setPosts(data);\n  }, [data, setPosts]);\n\n  return (\n    <div className=\"App\">\n      <Header title=\"React JS Blog\" />\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home isLoading={isLoading} fetchError={fetchError} />\n        </Route>\n        <Route exact path=\"/post\" component={NewPost} />\n        <Route path=\"/edit/:id\" component={EditPost} />\n        <Route path=\"/post/:id\" component={PostPage} />\n        <Route exact path=\"/about\" component={About} />\n        <Route path=\"*\" component={Missing} />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:3500\",\r\n});\r\n","import { createStore, action, thunk, computed } from \"easy-peasy\";\r\nimport api from \"./api/posts\";\r\n\r\nexport default createStore({\r\n  posts: [],\r\n  setPosts: action((state, payload) => {\r\n    state.posts = payload;\r\n  }),\r\n  postTitle: \"\",\r\n  setPostTitle: action((state, payload) => {\r\n    state.postTitle = payload;\r\n  }),\r\n  postBody: \"\",\r\n  setPostBody: action((state, payload) => {\r\n    state.postBody = payload;\r\n  }),\r\n  editTitle: \"\",\r\n  setEditTitle: action((state, payload) => {\r\n    state.editTitle = payload;\r\n  }),\r\n  editBody: \"\",\r\n  setEditBody: action((state, payload) => {\r\n    state.editBody = payload;\r\n  }),\r\n  search: \"\",\r\n  setSearch: action((state, payload) => {\r\n    state.search = payload;\r\n  }),\r\n  searchResults: [],\r\n  setSearchResults: action((state, payload) => {\r\n    state.searchResults = payload;\r\n  }),\r\n  postCount: computed((state) => state.posts.length),\r\n  getPostById: computed((state) => {\r\n    return (id) => state.posts.find((post) => post.id.toString() === id);\r\n  }),\r\n  savePost: thunk(async (actions, newPost, helpers) => {\r\n    const { posts } = helpers.getState();\r\n    try {\r\n      const response = await api.post(\"/posts\", newPost);\r\n      actions.setPosts([...posts, response.data]);\r\n      actions.setPostTitle(\"\");\r\n      actions.setPostBody(\"\");\r\n    } catch (err) {\r\n      console.log(`Error: ${err.message}`);\r\n    }\r\n  }),\r\n  deletePost: thunk(async (actions, id, helpers) => {\r\n    const { posts } = helpers.getState();\r\n    try {\r\n      await api.delete(`/posts/${id}`);\r\n      actions.setPosts(posts.filter((post) => post.id !== id));\r\n    } catch (err) {\r\n      console.log(`Error: ${err.message}`);\r\n    }\r\n  }),\r\n  editPost: thunk(async (actions, updatedPost, helpers) => {\r\n    const { posts } = helpers.getState();\r\n    const { id } = updatedPost;\r\n    try {\r\n      const response = await api.put(`/posts/${id}`, updatedPost);\r\n      actions.setPosts(\r\n        posts.map((post) => (post.id === id ? { ...response.data } : post))\r\n      );\r\n      actions.setEditTitle(\"\");\r\n      actions.setEditBody(\"\");\r\n    } catch (err) {\r\n      console.log(`Error: ${err.message}`);\r\n    }\r\n  }),\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { StoreProvider } from \"easy-peasy\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider store={store}>\n      <Router>\n        <Route path=\"/\" component={App} />\n      </Router>\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}